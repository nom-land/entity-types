// Generated by ts-to-zod
import { z } from "zod";

export const baseEntitySchema = z.object({
  url: z.string(),
  version: z.literal("20231121"),
  parser: z.string(),
});

const mediaSchema = z.object({
  name: z.string().optional(),
  address: z.string().optional(),
  mime_type: z.string().optional(),
  size_in_bytes: z.number().optional(),
  alt: z.string().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

const digitalContentSchema = z.object({
  platform: z.string().optional(),
  authors: z.array(z.string()).optional(),
  language: z.string().optional(),
  column: z.string().optional(),
  publishDate: z.string().optional(),
  lastModified: z.string().optional(),
  copyright: z.string().optional(),
  translators: z.array(z.string()).optional(),
  originalUrl: z.string().optional(),
  originalTitle: z.string().optional(),
  originalLanguage: z.string().optional(),
});

export const postMetaDataSchema = digitalContentSchema.extend({
  type: z.union([
    z.literal("post"),
    z.literal("blog"),
    z.literal("poem"),
    z.literal("essay"),
    z.literal("comment"),
    z.literal("novel"),
  ]),
  keywords: z.array(z.string()).optional(),
});

export const bookMetaDataSchema = digitalContentSchema.extend({
  pages: z.number().optional(),
  ISBN: z.string().optional(),
});

export const podcastMetaDataSchema = digitalContentSchema.extend({
  host: z.string().optional(),
  guests: z.array(z.string()).optional(),
});

export const defaultMetaDataSchema = digitalContentSchema;

export const entitySchema = baseEntitySchema.extend({
  title: z.string().optional(),
  description: z.string().optional(),
  covers: z.array(mediaSchema).optional(),
  IPFSUrl: z.string().optional(),
  links: z.array(z.string()).optional(),
  type: z
    .union([
      z.literal("post"),
      z.literal("book"),
      z.literal("podcast"),
      z.literal("video"),
      z.literal("paper"),
      z.literal("song"),
      z.literal("movie"),
      z.literal("game"),
    ])
    .optional(),
  metaData: z
    .union([
      postMetaDataSchema,
      bookMetaDataSchema,
      podcastMetaDataSchema,
      defaultMetaDataSchema,
    ])
    .optional(),
});
